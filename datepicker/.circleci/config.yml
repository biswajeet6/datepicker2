version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.1

jobs:
  bootstrap-dependencies:
    docker:
      - image: circleci/node:12.16.1
    working_directory: ~/date-picker
    steps:
      - checkout
      - run:
          name: npm-install
          command: "npm install"
      - save_cache:
          key: dependency-cache-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  test-js:
    docker:
      - image: circleci/node:12.16.1
    working_directory: ~/date-picker
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}-{{ checksum "package-lock.json" }}
      - run:
          name: run-tests
          command: 'TZ=UTC npm run test'
  build-deploy:
    docker:
      - image: circleci/node:12.16.1
    working_directory: ~/date-picker
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Serverless CLI and dependencies
          command: sudo npm i -g serverless@2.72.2
      - run:
          name: Install PIP
          command: sudo apt-get install python-pip python-dev
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Install
          command: npm install
      - run:
          name: sync-local-serverless-configuration
          command: node deploy/sync-templates.js local
      - run:
          name: deploy
          command: serverless --aws-s3-accelerate
      - run:
          name: sync-aws-serverless-configuration
          command: node deploy/sync-templates.js aws

workflows:

  build-and-test:
    jobs:
      - bootstrap-dependencies:
          filters:
            branches:
              only:
                - main
                - production
                - /release/.*/

      - test-js:
          requires:
            - bootstrap-dependencies
          filters:
            branches:
              only:
                - main
                - production
                - /release/.*/

      # Cutter & Squidge Deployment (Staging & Live)
      - hold-deploy-cutters-staging:
          type: approval
          requires:
            - "test-js"
          filters:
            branches:
              only:
                - main
                - production
                - /release/.*/
      - build-deploy:
          name: "build-deploy-cutter-staging"
          context: datepicker-cutter-staging
          filters:
            branches:
              only:
                - main
                - production
                - /release/.*/
          requires:
            - test-js
            - hold-deploy-cutters-staging
      - hold-deploy-cutter-live:
          type: approval
          requires:
            - "build-deploy-cutter-staging"
          filters:
            branches:
              only:
                - production
                - /release/.*/
      - build-deploy:
          name: "build-deploy-cutter-production"
          context: datepicker-cutter-production
          requires:
            - hold-deploy-cutter-live
          filters:
            branches:
              only:
                - production
                - /release/.*/
